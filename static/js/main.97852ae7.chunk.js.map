{"version":3,"sources":["components/Buttons.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Buttons.module.css"],"names":["Buttons","props","buttons","map","el","className","style","button","onClick","clickButton","value","id","App","useState","setButtons","showButtons","setShowButtons","newArray","changeValue","deleteButton","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iPAIaA,EAAU,SAACC,GAEpB,OACI,8BACKA,EAAMC,QAAQC,KAAI,SAAAC,GACX,OAAO,8BACH,wBACIC,UAAWC,IAAMC,OACjBC,QAAS,kBAAMP,EAAMQ,YAAYL,EAAGM,MAAON,EAAGO,KAFlD,SAIKP,EAAGM,SALKN,EAAGO,UCyCzBC,MA7Cf,WAAgB,IAAD,EACmBC,mBAAwB,CAClD,CAACF,GAAI,EAAGD,MAAO,GACf,CAACC,GAAI,EAAGD,MAAO,GACf,CAACC,GAAI,EAAGD,MAAO,KAJR,mBACJR,EADI,KACKY,EADL,OAM2BD,oBAAkB,GAN7C,mBAMJE,EANI,KAMSC,EANT,KA6BX,OACI,qBAAKX,UAAU,MAAf,SACKU,EAEG,qBAAKV,UAAU,mBAAf,SACI,cAAC,EAAD,CAASH,QAASA,EAASO,YAfvB,SAACC,EAAeC,IAXhB,SAACD,GACjB,IAAMO,EAAQ,YAAOf,GACrBe,EAAS,GAAGP,MAAQA,EACpBI,EAAWG,GASXC,CAAYR,GANK,SAACC,GAClB,IAAMQ,EAAejB,EAAQkB,QAAO,SAAChB,GAAD,OAAQA,EAAGO,KAAOA,KACtDG,EAAWK,GAKXA,CAAaR,QAgBL,qBAAKN,UAAU,mBAAf,SACI,wBAAQA,UAAWC,IAAMC,OAAQC,QAdxB,WACrBQ,GAAe,IAaH,oBC7BLK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,2B","file":"static/js/main.97852ae7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {button} from \"../App\";\r\nimport style from \"./Buttons.module.css\"\r\n\r\nexport const Buttons = (props: buttonsPropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            {props.buttons.map(el => {\r\n                    return <div key={el.id}>\r\n                        <button\r\n                            className={style.button}\r\n                            onClick={() => props.clickButton(el.value, el.id)}\r\n                        >\r\n                            {el.value}\r\n                        </button>\r\n                    </div>\r\n                }\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n//type\r\ntype buttonsPropsType = {\r\n    buttons: Array<button>\r\n    clickButton: (value: number, id: number) => void\r\n}\r\n\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport {Buttons} from \"./components/Buttons\";\nimport style from \"./components/Buttons.module.css\";\n\nfunction App() {\n    const [buttons, setButtons] = useState<Array<button>>([\n        {id: 1, value: 1},\n        {id: 2, value: 2},\n        {id: 3, value: 3}]\n    )\n    const [showButtons, setShowButtons] = useState<boolean>(false)\n\n    const changeValue = (value: number) => {\n        const newArray = [...buttons]\n        newArray[0].value = value\n        setButtons(newArray)\n    }\n\n    const deleteButton = (id: number) => {\n        const deleteButton = buttons.filter((el) => el.id !== id)\n        setButtons(deleteButton)\n    }\n\n    const clickButton = (value: number, id: number) => {\n        changeValue(value)\n        deleteButton(id)\n    }\n\n    const clickShowButtons = () => {\n        setShowButtons(true)\n    }\n\n\n    return (\n        <div className=\"app\">\n            {showButtons\n                ?\n                <div className=\"buttonsContainer\">\n                    <Buttons buttons={buttons} clickButton={clickButton}/>\n                </div>\n                :\n                <div className=\"buttonsContainer\">\n                    <button className={style.button} onClick={clickShowButtons}>1</button>\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default App;\n\n\n//type\nexport type button = {\n    id: number,\n    value: number\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Buttons_button__HquGD\"};"],"sourceRoot":""}